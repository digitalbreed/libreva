FROM node:20-slim AS builder

WORKDIR /app

# Install build dependencies
RUN apt-get update && apt-get install -y \
    python3 \
    make \
    g++ \
    && rm -rf /var/lib/apt/lists/*

# Copy package files
COPY package*.json ./
# Install all dependencies including devDependencies
RUN npm install

# Opt out of Next.js telemetry
RUN npx next telemetry disable

# Copy source code
COPY . .

# Build the application
RUN npm run build

# Production stage
FROM node:20-slim

WORKDIR /app

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    python3 \
    make \
    g++ \
    && rm -rf /var/lib/apt/lists/*

# Copy package files and install production dependencies
COPY package*.json ./
# First install with --ignore-scripts to skip husky prepare script, then explicitly rebuild sqlite3
# This two-step process is necessary because:
# 1. --ignore-scripts prevents husky from running its prepare script (which requires dev dependencies)
# 2. We need to explicitly rebuild sqlite3 after installation to ensure native bindings are compiled
#    with the correct Node.js version and platform-specific settings
RUN npm install --production --ignore-scripts && npm rebuild sqlite3

# Copy built application from builder stage
COPY --from=builder /app/.next ./.next
COPY --from=builder /app/public ./public
COPY --from=builder /app/next.config.js ./
COPY --from=builder /app/src/lib/db/schema.sql ./src/lib/db/schema.sql

EXPOSE 3000

CMD ["npm", "start"] 